name: Build and Publish to AWS CodeArtifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: ''

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read    # Required for actions/checkout

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3.5.3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3.12.0
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Debug - Print GitHub context
      run: |
        echo "GitHub Repository: ${{ github.repository }}"
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Actor: ${{ github.actor }}"
        echo "GitHub Event Name: ${{ github.event_name }}"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2.2.0
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com
        
    - name: Get CodeArtifact authorization token
      id: get-token
      run: |
        CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --query authorizationToken \
          --output text)
        echo "CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> $GITHUB_ENV
        
        CODEARTIFACT_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} \
          --format maven \
          --query repositoryEndpoint \
          --output text)
        echo "CODEARTIFACT_REPOSITORY_URL=${CODEARTIFACT_REPOSITORY_URL}" >> $GITHUB_ENV
        
    - name: Delete existing latest versions
      run: |
        # Delete latest version for hiscore-service
        aws codeartifact delete-package-versions \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} \
          --format maven \
          --package hiscore-service \
          --versions latest || true

        # Delete latest version for getCharacterHiscores
        aws codeartifact delete-package-versions \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} \
          --format maven \
          --package getCharacterHiscores \
          --versions latest || true
        
    - name: Set version if provided
      if: github.event.inputs.version != ''
      run: |
        echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        
    - name: Set default version if not provided
      if: github.event.inputs.version == ''
      run: |
        # Generate version based on timestamp if not provided
        VERSION="1.0.0-$(date +'%Y%m%d%H%M%S')"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        
    - name: Build with Gradle
      run: ./gradlew build -Pversion=${{ env.VERSION }}
      
    - name: Publish to AWS CodeArtifact
      run: |
        ./gradlew publishAllToCodeArtifact publishLatest -Pversion=${{ env.VERSION }}
      env:
        CODEARTIFACT_AUTH_TOKEN: ${{ env.CODEARTIFACT_AUTH_TOKEN }}
        CODEARTIFACT_REPOSITORY_URL: ${{ env.CODEARTIFACT_REPOSITORY_URL }}
        CODEARTIFACT_DOMAIN: ${{ secrets.CODEARTIFACT_DOMAIN }}
        CODEARTIFACT_DOMAIN_OWNER: ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }}
        CODEARTIFACT_REPOSITORY: ${{ secrets.CODEARTIFACT_REPOSITORY }}
        
    - name: Verify published artifacts
      run: |
        # List all published artifacts
        aws codeartifact list-package-versions \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} \
          --package hiscore-service-uberjar \
          --format maven \
          --query "versions[*].version" \
          --output text
        
        # List lambda handler uberjar artifacts
        aws codeartifact list-package-versions \
          --domain ${{ secrets.CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.CODEARTIFACT_REPOSITORY }} \
          --package getCharacterHiscores-lambda-uberjar \
          --format maven \
          --query "versions[*].version" \
          --output text
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.1
      with:
        name: hiscore-service-artifacts
        path: |
          build/libs/hiscore-service-*.jar
          build/libs/*-lambda-*.jar
