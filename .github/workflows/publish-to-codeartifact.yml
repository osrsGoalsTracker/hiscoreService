name: Build and Publish to AWS CodeArtifact

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        default: ''

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.OSRS_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.OSRS_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.OSRS_AWS_REGION }}
        
    - name: Get CodeArtifact authorization token
      id: get-token
      run: |
        CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain ${{ secrets.OSRS_CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.OSRS_CODEARTIFACT_DOMAIN_OWNER }} \
          --query authorizationToken \
          --output text)
        echo "CODEARTIFACT_AUTH_TOKEN=${CODEARTIFACT_AUTH_TOKEN}" >> $GITHUB_ENV
        
        CODEARTIFACT_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint \
          --domain ${{ secrets.OSRS_CODEARTIFACT_DOMAIN }} \
          --domain-owner ${{ secrets.OSRS_CODEARTIFACT_DOMAIN_OWNER }} \
          --repository ${{ secrets.OSRS_CODEARTIFACT_REPOSITORY }} \
          --format maven \
          --query repositoryEndpoint \
          --output text)
        echo "CODEARTIFACT_REPOSITORY_URL=${CODEARTIFACT_REPOSITORY_URL}" >> $GITHUB_ENV
        
    - name: Set version if provided
      if: github.event.inputs.version != ''
      run: |
        echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        
    - name: Set default version if not provided
      if: github.event.inputs.version == ''
      run: |
        # Generate version based on timestamp if not provided
        VERSION="1.0.0-$(date +'%Y%m%d%H%M%S')"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        
    - name: Build with Gradle
      run: ./gradlew build -Pversion=${{ env.VERSION }}
      
    - name: Publish to AWS CodeArtifact
      run: |
        ./gradlew publishAllToCodeArtifact -Pversion=${{ env.VERSION }}
      env:
        CODEARTIFACT_AUTH_TOKEN: ${{ env.CODEARTIFACT_AUTH_TOKEN }}
        CODEARTIFACT_REPOSITORY_URL: ${{ env.CODEARTIFACT_REPOSITORY_URL }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: hiscore-service-artifacts
        path: |
          build/libs/hiscore-service-*.jar
          build/libs/*-lambda-*.jar
